using Google.Apis.Auth.OAuth2;
using Google.Apis.Gmail.v1;
using Google.Apis.Gmail.v1.Data;
using Google.Apis.Services;
using MimeKit;
using TheGrind5_EventManagement.Business;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.Logging;
using Google.Apis.Auth.OAuth2.Flows;
using Google.Apis.Auth.OAuth2.Responses;

namespace TheGrind5_EventManagement.Services;

public class EmailService : IEmailService
{
    private readonly IConfiguration _configuration;
    private readonly ILogger<EmailService> _logger;
    private GmailService? _gmailService;

    // Email configuration - centralized
    private string SenderEmail => _configuration["Gmail:SenderEmail"] ?? "nguyenluonghoangthien5605@gmail.com";

    public EmailService(IConfiguration configuration, ILogger<EmailService> logger)
    {
        _configuration = configuration;
        _logger = logger;
    }

    private async Task<GmailService> GetGmailServiceAsync()
    {
        if (_gmailService != null)
            return _gmailService;

        try
        {
            var clientId = _configuration["Gmail:ClientId"] ?? "YOUR_CLIENT_ID";
            var clientSecret = _configuration["Gmail:ClientSecret"] ?? "YOUR_CLIENT_SECRET";
            var refreshToken = _configuration["Gmail:RefreshToken"] ?? "";

            if (string.IsNullOrEmpty(refreshToken))
            {
                _logger.LogError("Gmail RefreshToken is not configured");
                throw new InvalidOperationException("Gmail RefreshToken is not configured");
            }

            var applicationName = _configuration["Gmail:ApplicationName"] ?? "TheGrind5 Event Management";

            var tokenResponse = new TokenResponse
            {
                RefreshToken = refreshToken
            };

            var secrets = new ClientSecrets
            {
                ClientId = clientId,
                ClientSecret = clientSecret
            };

            var flow = new GoogleAuthorizationCodeFlow(new GoogleAuthorizationCodeFlow.Initializer
            {
                ClientSecrets = secrets,
                Scopes = new[] { GmailService.Scope.GmailSend }
            });

            var credential = new UserCredential(flow, "user", tokenResponse);

            _gmailService = new GmailService(new BaseClientService.Initializer
            {
                HttpClientInitializer = credential,
                ApplicationName = applicationName
            });

            _logger.LogInformation("Gmail API service initialized successfully");
            return _gmailService;
        }
        catch (Exception ex)
        {
            _logger.LogError(ex, "Failed to initialize Gmail API service");
            throw;
        }
    }

    private async Task<bool> SendEmailAsync(string toEmail, string subject, string body)
    {
        try
        {
            // Create MIME message
            var message = new MimeMessage();
            message.From.Add(new MailboxAddress("TheGrind5 Event Management", SenderEmail));
            message.To.Add(new MailboxAddress("", toEmail));

            message.Subject = subject;
            
            var bodyBuilder = new BodyBuilder
            {
                HtmlBody = body
            };
            message.Body = bodyBuilder.ToMessageBody();

            // Convert to Gmail API format
            using (var stream = new MemoryStream())
            {
                message.WriteTo(stream);
                var rawMessage = Convert.ToBase64String(stream.ToArray())
                    .Replace('+', '-')
                    .Replace('/', '_')
                    .Replace("=", "");

                var service = await GetGmailServiceAsync();
                var gmailMessage = new Message { Raw = rawMessage };

                await service.Users.Messages.Send(gmailMessage, "me").ExecuteAsync();
            }

            _logger.LogInformation($"Email sent successfully to {toEmail}");
            return true;
        }
        catch (Exception ex)
        {
            _logger.LogError(ex, $"Failed to send email to {toEmail}");
            return false;
        }
    }

    public async Task<bool> SendOtpEmailAsync(string toEmail, string otpCode)
    {
        return await SendEmailAsync(toEmail, "M√£ OTP ƒë·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u", CreateOtpEmailBody(otpCode));
    }

    private string CreateOtpEmailBody(string otpCode)
    {
        return $@"
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset='utf-8'>
            <style>
                body {{ font-family: Arial, sans-serif; line-height: 1.6; color: #333; }}
                .container {{ max-width: 600px; margin: 0 auto; padding: 20px; }}
                .header {{ background-color: #007bff; color: white; padding: 20px; text-align: center; border-radius: 8px 8px 0 0; }}
                .content {{ background-color: #f8f9fa; padding: 30px; border-radius: 0 0 8px 8px; }}
                .otp-code {{ 
                    font-size: 32px; 
                    font-weight: bold; 
                    color: #007bff; 
                    text-align: center; 
                    background-color: #e9ecef; 
                    padding: 20px; 
                    border-radius: 8px; 
                    margin: 20px 0; 
                    letter-spacing: 8px;
                }}
                .warning {{ 
                    background-color: #fff3cd; 
                    border: 1px solid #ffeaa7; 
                    color: #856404; 
                    padding: 15px; 
                    border-radius: 5px; 
                    margin: 20px 0; 
                }}
                .footer {{ text-align: center; margin-top: 30px; color: #6c757d; font-size: 14px; }}
            </style>
        </head>
        <body>
            <div class='container'>
                <div class='header'>
                    <h1>TheGrind5 Event Management</h1>
                </div>
                <div class='content'>
                    <h2>M√£ OTP ƒë·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u</h2>
                    <p>Xin ch√†o,</p>
                    <p>B·∫°n ƒë√£ y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n c·ªßa m√¨nh. Vui l√≤ng s·ª≠ d·ª•ng m√£ OTP sau ƒë√¢y:</p>
                    
                    <div class='otp-code'>{otpCode}</div>
                    
                    <div class='warning'>
                        <strong>‚ö†Ô∏è L∆∞u √Ω quan tr·ªçng:</strong><br>
                        ‚Ä¢ M√£ OTP n√†y ch·ªâ c√≥ hi·ªáu l·ª±c trong 60 gi√¢y<br>
                        ‚Ä¢ Kh√¥ng chia s·∫ª m√£ n√†y v·ªõi b·∫•t k·ª≥ ai<br>
                        ‚Ä¢ N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y
                    </div>
                    
                    <p>N·∫øu b·∫°n g·∫∑p v·∫•n ƒë·ªÅ, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i.</p>
                </div>
                <div class='footer'>
                    <p>¬© 2024 TheGrind5 Event Management. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
                </div>
            </div>
        </body>
        </html>";
    }

    public async Task<bool> SendEventReminderEmailAsync(string toEmail, string eventName, DateTime eventStartTime)
    {
        return await SendEmailAsync(toEmail, $"Nh·∫Øc nh·ªü s·ª± ki·ªán: {eventName}", CreateEventReminderEmailBody(eventName, eventStartTime));
    }

    public async Task<bool> SendEventUpdateEmailAsync(string toEmail, string eventName, string updateMessage)
    {
        return await SendEmailAsync(toEmail, $"C·∫≠p nh·∫≠t s·ª± ki·ªán: {eventName}", CreateEventUpdateEmailBody(eventName, updateMessage));
    }

    public async Task<bool> SendEventCancelledEmailAsync(string toEmail, string eventName)
    {
        return await SendEmailAsync(toEmail, $"S·ª± ki·ªán ƒë√£ b·ªã h·ªßy: {eventName}", CreateEventCancelledEmailBody(eventName));
    }

    public async Task<bool> SendOrderConfirmationEmailAsync(string toEmail, int orderId, decimal amount)
    {
        return await SendEmailAsync(toEmail, "X√°c nh·∫≠n ƒë∆°n h√†ng", CreateOrderConfirmationEmailBody(orderId, amount));
    }

    public async Task<bool> SendPaymentSuccessEmailAsync(string toEmail, int orderId, decimal amount)
    {
        return await SendEmailAsync(toEmail, "Thanh to√°n th√†nh c√¥ng", CreatePaymentSuccessEmailBody(orderId, amount));
    }

    public async Task<bool> SendRefundEmailAsync(string toEmail, int orderId, decimal refundAmount)
    {
        return await SendEmailAsync(toEmail, "Ho√†n ti·ªÅn ƒë√£ ƒë∆∞·ª£c x·ª≠ l√Ω", CreateRefundEmailBody(orderId, refundAmount));
    }

    private string CreateEventReminderEmailBody(string eventName, DateTime eventStartTime)
    {
        return $@"
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset='utf-8'>
            <style>
                body {{ font-family: Arial, sans-serif; line-height: 1.6; color: #333; }}
                .container {{ max-width: 600px; margin: 0 auto; padding: 20px; }}
                .header {{ background-color: #28a745; color: white; padding: 20px; text-align: center; border-radius: 8px 8px 0 0; }}
                .content {{ background-color: #f8f9fa; padding: 30px; border-radius: 0 0 8px 8px; }}
                .event-info {{ background-color: white; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #28a745; }}
                .footer {{ text-align: center; margin-top: 30px; color: #6c757d; font-size: 14px; }}
                .button {{ background-color: #28a745; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px; display: inline-block; margin-top: 10px; }}
            </style>
        </head>
        <body>
            <div class='container'>
                <div class='header'>
                    <h1>üìÖ Nh·∫Øc nh·ªü s·ª± ki·ªán</h1>
                </div>
                <div class='content'>
                    <p>Xin ch√†o,</p>
                    <p>Ch√∫ng t√¥i mu·ªën nh·∫Øc nh·ªü b·∫°n v·ªÅ s·ª± ki·ªán s·∫Øp t·ªõi:</p>
                    
                    <div class='event-info'>
                        <h3>{eventName}</h3>
                        <p><strong>Th·ªùi gian:</strong> {eventStartTime:dd/MM/yyyy HH:mm}</p>
                    </div>
                    
                    <p>H√£y s·∫Øp x·∫øp th·ªùi gian ƒë·ªÉ tham gia s·ª± ki·ªán. Ch√∫ng t√¥i hy v·ªçng s·∫Ω ƒë∆∞·ª£c g·∫∑p b·∫°n!</p>
                </div>
                <div class='footer'>
                    <p>¬© 2024 TheGrind5 Event Management. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
                </div>
            </div>
        </body>
        </html>";
    }

    private string CreateEventUpdateEmailBody(string eventName, string updateMessage)
    {
        return $@"
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset='utf-8'>
            <style>
                body {{ font-family: Arial, sans-serif; line-height: 1.6; color: #333; }}
                .container {{ max-width: 600px; margin: 0 auto; padding: 20px; }}
                .header {{ background-color: #ffc107; color: #333; padding: 20px; text-align: center; border-radius: 8px 8px 0 0; }}
                .content {{ background-color: #f8f9fa; padding: 30px; border-radius: 0 0 8px 8px; }}
                .update-box {{ background-color: #fff3cd; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #ffc107; }}
                .footer {{ text-align: center; margin-top: 30px; color: #6c757d; font-size: 14px; }}
            </style>
        </head>
        <body>
            <div class='container'>
                <div class='header'>
                    <h1>üì¢ C·∫≠p nh·∫≠t s·ª± ki·ªán</h1>
                </div>
                <div class='content'>
                    <p>Xin ch√†o,</p>
                    <p>Ch√∫ng t√¥i c√≥ th√¥ng tin c·∫≠p nh·∫≠t v·ªÅ s·ª± ki·ªán:</p>
                    
                    <div class='update-box'>
                        <h3>{eventName}</h3>
                        <p>{updateMessage}</p>
                    </div>
                    
                    <p>Vui l√≤ng ki·ªÉm tra th√¥ng tin v√† c·∫≠p nh·∫≠t l·ªãch tr√¨nh n·∫øu c·∫ßn thi·∫øt.</p>
                </div>
                <div class='footer'>
                    <p>¬© 2024 TheGrind5 Event Management. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
                </div>
            </div>
        </body>
        </html>";
    }

    private string CreateEventCancelledEmailBody(string eventName)
    {
        return $@"
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset='utf-8'>
            <style>
                body {{ font-family: Arial, sans-serif; line-height: 1.6; color: #333; }}
                .container {{ max-width: 600px; margin: 0 auto; padding: 20px; }}
                .header {{ background-color: #dc3545; color: white; padding: 20px; text-align: center; border-radius: 8px 8px 0 0; }}
                .content {{ background-color: #f8f9fa; padding: 30px; border-radius: 0 0 8px 8px; }}
                .warning-box {{ background-color: #f8d7da; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #dc3545; }}
                .footer {{ text-align: center; margin-top: 30px; color: #6c757d; font-size: 14px; }}
            </style>
        </head>
        <body>
            <div class='container'>
                <div class='header'>
                    <h1>‚ùå S·ª± ki·ªán ƒë√£ b·ªã h·ªßy</h1>
                </div>
                <div class='content'>
                    <p>Xin ch√†o,</p>
                    <p>Ch√∫ng t√¥i r·∫•t ti·∫øc ph·∫£i th√¥ng b√°o r·∫±ng s·ª± ki·ªán sau ƒë√£ b·ªã h·ªßy:</p>
                    
                    <div class='warning-box'>
                        <h3>{eventName}</h3>
                    </div>
                    
                    <p><strong>Ti·ªÅn s·∫Ω ƒë∆∞·ª£c ho√†n l·∫°i:</strong><br>
                    Ti·ªÅn ƒë√£ thanh to√°n cho s·ª± ki·ªán n√†y s·∫Ω ƒë∆∞·ª£c ho√†n l·∫°i v√†o v√≠ c·ªßa b·∫°n trong v√≤ng 3-5 ng√†y l√†m vi·ªác.</p>
                    
                    <p>Ch√∫ng t√¥i xin l·ªói v√¨ s·ª± b·∫•t ti·ªán n√†y. C·∫£m ∆°n b·∫°n ƒë√£ th√¥ng c·∫£m!</p>
                </div>
                <div class='footer'>
                    <p>¬© 2024 TheGrind5 Event Management. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
                </div>
            </div>
        </body>
        </html>";
    }

    private string CreateOrderConfirmationEmailBody(int orderId, decimal amount)
    {
        return $@"
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset='utf-8'>
            <style>
                body {{ font-family: Arial, sans-serif; line-height: 1.6; color: #333; }}
                .container {{ max-width: 600px; margin: 0 auto; padding: 20px; }}
                .header {{ background-color: #17a2b8; color: white; padding: 20px; text-align: center; border-radius: 8px 8px 0 0; }}
                .content {{ background-color: #f8f9fa; padding: 30px; border-radius: 0 0 8px 8px; }}
                .info-box {{ background-color: white; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #17a2b8; }}
                .footer {{ text-align: center; margin-top: 30px; color: #6c757d; font-size: 14px; }}
            </style>
        </head>
        <body>
            <div class='container'>
                <div class='header'>
                    <h1>‚úì X√°c nh·∫≠n ƒë∆°n h√†ng</h1>
                </div>
                <div class='content'>
                    <p>Xin ch√†o,</p>
                    <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒë·∫∑t h√†ng! ƒê∆°n h√†ng c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n:</p>
                    
                    <div class='info-box'>
                        <h3>M√£ ƒë∆°n h√†ng: #{orderId}</h3>
                        <p><strong>T·ªïng gi√° tr·ªã:</strong> {amount:N0} VND</p>
                    </div>
                    
                    <p>ƒê∆°n h√†ng c·ªßa b·∫°n s·∫Ω ƒë∆∞·ª£c x·ª≠ l√Ω trong th·ªùi gian s·ªõm nh·∫•t. B·∫°n s·∫Ω nh·∫≠n ƒë∆∞·ª£c email khi ƒë∆°n h√†ng ƒë∆∞·ª£c thanh to√°n th√†nh c√¥ng.</p>
                </div>
                <div class='footer'>
                    <p>¬© 2024 TheGrind5 Event Management. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
                </div>
            </div>
        </body>
        </html>";
    }

    private string CreatePaymentSuccessEmailBody(int orderId, decimal amount)
    {
        return $@"
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset='utf-8'>
            <style>
                body {{ font-family: Arial, sans-serif; line-height: 1.6; color: #333; }}
                .container {{ max-width: 600px; margin: 0 auto; padding: 20px; }}
                .header {{ background-color: #28a745; color: white; padding: 20px; text-align: center; border-radius: 8px 8px 0 0; }}
                .content {{ background-color: #f8f9fa; padding: 30px; border-radius: 0 0 8px 8px; }}
                .success-box {{ background-color: #d4edda; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #28a745; }}
                .footer {{ text-align: center; margin-top: 30px; color: #6c757d; font-size: 14px; }}
            </style>
        </head>
        <body>
            <div class='container'>
                <div class='header'>
                    <h1>‚úì Thanh to√°n th√†nh c√¥ng</h1>
                </div>
                <div class='content'>
                    <p>Xin ch√†o,</p>
                    <p>Ch√∫c m·ª´ng! Giao d·ªãch thanh to√°n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c th·ª±c hi·ªán th√†nh c√¥ng:</p>
                    
                    <div class='success-box'>
                        <h3>M√£ ƒë∆°n h√†ng: #{orderId}</h3>
                        <p><strong>S·ªë ti·ªÅn:</strong> {amount:N0} VND</p>
                    </div>
                    
                    <p>V√© c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c k√≠ch ho·∫°t. H√£y ki·ªÉm tra email ƒë·ªÉ xem chi ti·∫øt v√© ho·∫∑c ƒëƒÉng nh·∫≠p v√†o t√†i kho·∫£n ƒë·ªÉ xem v√© c·ªßa b·∫°n.</p>
                </div>
                <div class='footer'>
                    <p>¬© 2024 TheGrind5 Event Management. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
                </div>
            </div>
        </body>
        </html>";
    }

    private string CreateRefundEmailBody(int orderId, decimal refundAmount)
    {
        return $@"
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset='utf-8'>
            <style>
                body {{ font-family: Arial, sans-serif; line-height: 1.6; color: #333; }}
                .container {{ max-width: 600px; margin: 0 auto; padding: 20px; }}
                .header {{ background-color: #6f42c1; color: white; padding: 20px; text-align: center; border-radius: 8px 8px 0 0; }}
                .content {{ background-color: #f8f9fa; padding: 30px; border-radius: 0 0 8px 8px; }}
                .refund-box {{ background-color: #e7d9ff; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #6f42c1; }}
                .footer {{ text-align: center; margin-top: 30px; color: #6c757d; font-size: 14px; }}
            </style>
        </head>
        <body>
            <div class='container'>
                <div class='header'>
                    <h1>üí∞ Ho√†n ti·ªÅn ƒë√£ ƒë∆∞·ª£c x·ª≠ l√Ω</h1>
                </div>
                <div class='content'>
                    <p>Xin ch√†o,</p>
                    <p>Ti·ªÅn ho√†n tr·∫£ c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x·ª≠ l√Ω:</p>
                    
                    <div class='refund-box'>
                        <h3>M√£ ƒë∆°n h√†ng: #{orderId}</h3>
                        <p><strong>S·ªë ti·ªÅn ho√†n tr·∫£:</strong> {refundAmount:N0} VND</p>
                    </div>
                    
                    <p>Ti·ªÅn ƒë√£ ƒë∆∞·ª£c chuy·ªÉn v√†o v√≠ c·ªßa b·∫°n. B·∫°n c√≥ th·ªÉ ki·ªÉm tra s·ªë d∆∞ v√≠ ho·∫∑c r√∫t ti·ªÅn ra b·∫•t c·ª© l√∫c n√†o.</p>
                </div>
                <div class='footer'>
                    <p>¬© 2024 TheGrind5 Event Management. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
                </div>
            </div>
        </body>
        </html>";
    }
}
