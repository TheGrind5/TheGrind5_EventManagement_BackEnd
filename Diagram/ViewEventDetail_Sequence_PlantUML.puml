@startuml ViewEventDetail_Sequence
!theme plain
title View Event Detail - Sequence Diagram

actor Client
participant "EventController" as EC
participant "IEventService" as IES
participant "EventService" as ES
participant "IEventRepository" as IER
participant "EventRepository" as ER
participant "EventDBContext" as EDC
database "Database" as DB
participant "IEventMapper" as IEM
participant "EventMapper" as EM

== Client Request ==
Client -> EC: GET /api/event/{id}
activate EC

== Validation ==
EC -> EC: if (id <= 0)
EC --> EC: bool

alt ID is invalid
    EC --> Client: BadRequest("ID sự kiện không hợp lệ")
    deactivate EC
else ID is valid
    == Service Call ==
    EC -> IES: GetEventByIdAsync(id)
    activate IES
    
    IES -> ES: GetEventByIdAsync(id)
    activate ES
    
    == Repository Query ==
    ES -> IER: GetEventByIdAsync(id)
    activate IER
    
    IER -> ER: GetEventByIdAsync(id)
    activate ER
    
    == Database Access ==
    ER -> EDC: Events.Include(e => e.Host).Include(e => e.TicketTypes).FirstOrDefaultAsync(e => e.EventId == id)
    activate EDC
    
    EDC -> DB: SELECT * FROM Event e LEFT JOIN User u ON e.HostId = u.UserID LEFT JOIN TicketType tt ON e.EventId = tt.EventId WHERE e.EventId = @id
    activate DB
    
    DB --> EDC: Event data with Host and TicketTypes
    deactivate DB
    
    EDC --> ER: Event entity with related data
    deactivate EDC
    
    ER --> IER: Event?
    deactivate ER
    
    IER --> ES: Event?
    deactivate IER
    
    alt Event not found
        ES --> IES: null
        IES --> EC: null
        EC --> Client: NotFound("Không tìm thấy sự kiện")
        deactivate IES
        deactivate ES
        deactivate EC
    else Event found
        == Response ==
        EC -> EC: return Ok(_eventService.MapToEventDetailDto(eventData))
        activate EC
        
        EC -> IES: MapToEventDetailDto(eventData)
        activate IES
        
        IES -> ES: MapToEventDetailDto(eventData)
        activate ES
        
        ES -> IEM: MapToEventDetailDto(eventData)
        activate IEM
        
        IEM -> EM: MapToEventDetailDto(eventData)
        activate EM
        
        EM -> EM: Create EventDetailDto with Host info and TicketTypes
        EM --> IEM: EventDetailDto
        deactivate EM
        
        IEM --> ES: EventDetailDto
        deactivate IEM
        
        ES --> IES: EventDetailDto
        deactivate ES
        
        IES --> EC: EventDetailDto
        deactivate IES
        
        EC --> Client: Ok(EventDetailDto)
        deactivate EC
    end
end

@enduml
